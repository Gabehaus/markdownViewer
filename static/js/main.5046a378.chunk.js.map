{"version":3,"sources":["Components/DropDownA.jsx","Components/DropDownB.jsx","Components/Automator.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["DropDownA","props","state","handleChangeHeaderCall","bind","event","this","handleChangeHeader","ButtonDropdown","isOpen","dropdownOpen","toggle","toggleOpen","id","DropdownToggle","caret","icon","faHeading","size","color","className","DropdownMenu","DropdownItem","header","onChange","value","divider","style","borderColor","onClick","headerEnter","faCheck","Component","DropDownB","dropBopen","dropBtoggleOpen","faTable","type","columns","columnsChange","placeholder","rows","rowsChange","tableEnter","Automator","dragHandlers","onStart","onStop","deltaPosition","controlledPosition","handle","faBold","boldButtonClick","faItalic","italicButtonClick","faStrikethrough","strikeButtonClick","faLink","linkButtonClick","headerValue","faQuoteLeft","quoteButtonClick","faImages","imageButtonClick","faListUl","ulButtonClick","faListOl","olButtonClick","faArrowsAlt","onSubmit","lastEnteredText","autoBoxChange","marked","setOptions","breaks","App","handleDrag","e","ui","x","y","setState","deltaX","deltaY","activeDrags","adjustXPos","preventDefault","stopPropagation","adjustYPos","onControlledDrag","position","onControlledDragStop","input","preInput","headerType","getMarkdownText","findCursorPosition","handleChange","eventLogger","data","console","log","__html","sanitize","gfm","textBeforeCursorPosition","substring","cursorPosition","textAfterCursorPosition","length","target","selectionStart","persist","document","getElementById","repeat","renderer","Renderer","highlight","code","require","highlightAuto","pedantic","smartLists","smartypants","xhtml","src","dangerouslySetInnerHTML","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.5046a378.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeading } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class DropDownA extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.handleChangeHeaderCall = this.handleChangeHeaderCall.bind(this);\n  }\n\n  handleChangeHeaderCall(event) {\n    this.props.handleChangeHeader(event);\n  }\n\n  render() {\n    return (\n      <ButtonDropdown\n        isOpen={this.props.dropdownOpen}\n        toggle={this.props.toggleOpen}\n        id=\"drop-down\"\n      >\n        <DropdownToggle caret id=\"drop-down\">\n          <FontAwesomeIcon\n            icon={faHeading}\n            size=\"1x\"\n            color=\"black\"\n            className=\"auto-buttonF\"\n          ></FontAwesomeIcon>\n        </DropdownToggle>\n        <DropdownMenu id=\"dropdown-menu\">\n          <DropdownItem header id=\"header-type-title\">\n            Heading\n          </DropdownItem>\n          <select\n            id=\"header-type\"\n            onChange={this.handleChangeHeaderCall}\n            className=\"auto-buttonF\"\n          >\n            <option value=\"H1\">H1</option>\n            <option value=\"H2\">H2</option>\n            <option value=\"H3\">H3</option>\n          </select>\n          <DropdownItem divider style={{ borderColor: \"black\" }} />\n          <button id=\"check-button\" onClick={this.props.headerEnter}>\n            <FontAwesomeIcon\n              icon={faCheck}\n              size=\"1x\"\n              color=\"black\"\n            ></FontAwesomeIcon>\n          </button>\n        </DropdownMenu>\n      </ButtonDropdown>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeading } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTable } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class DropDownB extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ButtonDropdown\n        isOpen={this.props.dropBopen}\n        toggle={this.props.dropBtoggleOpen}\n        id=\"drop-down\"\n      >\n        <DropdownToggle caret id=\"drop-down\">\n          <FontAwesomeIcon\n            icon={faTable}\n            size=\"1x\"\n            color=\"black\"\n            className=\"auto-buttonF\"\n          ></FontAwesomeIcon>\n        </DropdownToggle>\n        <DropdownMenu id=\"dropdown-menu\">\n          <DropdownItem header id=\"header-type-title\">\n            Table\n          </DropdownItem>\n          <div id=\"columns-wrapper\">\n            Columns\n            <input\n              type=\"number\"\n              value={this.props.columns}\n              onChange={this.props.columnsChange}\n              placeholder=\"#\"\n            ></input>\n            Rows\n            <input\n              type=\"number\"\n              value={this.props.rows}\n              onChange={this.props.rowsChange}\n              placeholder=\"#\"\n            ></input>\n          </div>\n          <DropdownItem divider style={{ borderColor: \"black\" }} />\n          <button id=\"check-button\">\n            <FontAwesomeIcon\n              icon={faCheck}\n              size=\"1x\"\n              color=\"black\"\n              id=\"check-button\"\n              onClick={this.props.tableEnter}\n            ></FontAwesomeIcon>\n          </button>\n        </DropdownMenu>\n      </ButtonDropdown>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBold } from \"@fortawesome/free-solid-svg-icons\";\nimport { faItalic } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStrikethrough } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeading } from \"@fortawesome/free-solid-svg-icons\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faImages } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTable } from \"@fortawesome/free-solid-svg-icons\";\nimport { faListUl } from \"@fortawesome/free-solid-svg-icons\";\nimport { faListOl } from \"@fortawesome/free-solid-svg-icons\";\nimport { faArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport DropDownA from \"./DropDownA\";\nimport DropDownB from \"./DropDownB\";\nimport Draggable, { DraggableCore } from \"react-draggable\";\n\nexport default class Automator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const dragHandlers = { onStart: this.onStart, onStop: this.onStop };\n    const { deltaPosition, controlledPosition } = this.state;\n\n    return (\n      <div>\n        <Draggable handle=\"strong\" {...dragHandlers}>\n          <div id=\"automator-wrapper\">\n            <div id=\"button-grid\">\n              <button id=\"button-one\" className=\"auto-button\">\n                <FontAwesomeIcon\n                  icon={faBold}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                  onClick={this.props.boldButtonClick}\n                ></FontAwesomeIcon>\n              </button>\n              <button id=\"button-two\" className=\"auto-button\">\n                <FontAwesomeIcon\n                  icon={faItalic}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                  onClick={this.props.italicButtonClick}\n                ></FontAwesomeIcon>\n              </button>\n              <button id=\"button-three\" className=\"auto-button\">\n                <FontAwesomeIcon\n                  icon={faStrikethrough}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                  onClick={this.props.strikeButtonClick}\n                ></FontAwesomeIcon>\n              </button>\n              <button id=\"button-four\" className=\"auto-button\">\n                <FontAwesomeIcon\n                  icon={faLink}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                  onClick={this.props.linkButtonClick}\n                ></FontAwesomeIcon>\n              </button>\n\n              <DropDownA\n                headerValue={this.props.headerValue}\n                handleChangeHeader={this.props.handleChangeHeader}\n                dropdownOpen={!this.props.dropdownOpen}\n                toggleOpen={this.props.toggleOpen}\n                headerEnter={this.props.headerEnter}\n              />\n\n              <button id=\"button-six\" className=\"auto-button\">\n                <FontAwesomeIcon\n                  icon={faQuoteLeft}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                  onClick={this.props.quoteButtonClick}\n                ></FontAwesomeIcon>\n              </button>\n              <button id=\"button-seven\" className=\"auto-button\">\n                <FontAwesomeIcon\n                  icon={faImages}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                  onClick={this.props.imageButtonClick}\n                ></FontAwesomeIcon>\n              </button>\n\n              <DropDownB\n                id=\"drop-down-b\"\n                dropBopen={!this.props.dropBopen}\n                dropBtoggleOpen={this.props.dropBtoggleOpen}\n                tableEnter={this.props.tableEnter}\n                columnsChange={this.props.columnsChange}\n                rowsChange={this.props.rowsChange}\n                columns={this.props.columns}\n                rows={this.props.rows}\n              />\n              <button id=\"button-nine\" className=\"auto-button\">\n                <FontAwesomeIcon\n                  icon={faListUl}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                  onClick={this.props.ulButtonClick}\n                ></FontAwesomeIcon>\n              </button>\n              <button id=\"button-ten\" className=\"auto-button\">\n                <FontAwesomeIcon\n                  icon={faListOl}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                  onClick={this.props.olButtonClick}\n                ></FontAwesomeIcon>\n              </button>\n\n              <strong id=\"drag-control\">\n                <FontAwesomeIcon\n                  icon={faArrowsAlt}\n                  size=\"1x\"\n                  color=\"black\"\n                  className=\"auto-buttonF\"\n                ></FontAwesomeIcon>\n              </strong>\n            </div>\n            <form onSubmit={this.props.onSubmit} id=\"coffee\">\n              <textarea\n                id=\"text-box\"\n                placeholder=\"Set cursor in editor. Type text here and style with buttons, then press 'Enter' to paste text in editor.\"\n                value={this.props.lastEnteredText}\n                onChange={this.props.autoBoxChange}\n              />\n              <button type=\"submit\" id=\"submit\">\n                Enter\n              </button>\n            </form>\n          </div>\n        </Draggable>\n      </div>\n    );\n  }\n}\n","import React, { componentDidMount, forceUpdate } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport marked from \"marked\";\nimport hljs from \"highlight.js\";\nimport Automator from \"./Components/Automator\";\n\nimport Draggable, { DraggableCore } from \"react-draggable\";\n\n//Markdown version attempting to correct CSS nightmare\n\nmarked.setOptions({\n  breaks: true\n});\n\n// sets a default input variable with an initial markdown example\nconst markText = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: markText,\n      preInput: \"\",\n      lastEnteredText: \"\",\n      headerType: \"H1\",\n      dropdownOpen: \"false\",\n      dropBopen: \"false\",\n      columns: 1,\n      rows: 1,\n      activeDrags: 0,\n      deltaPosition: {\n        x: 0,\n        y: 0\n      },\n      controlledPosition: {\n        x: -400,\n        y: 200\n      }\n    };\n\n    this.getMarkdownText = this.getMarkdownText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.autoBoxChange = this.autoBoxChange.bind(this);\n    this.findCursorPosition = this.findCursorPosition.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.boldButtonClick = this.boldButtonClick.bind(this);\n    this.italicButtonClick = this.italicButtonClick.bind(this);\n    this.strikeButtonClick = this.strikeButtonClick.bind(this);\n    this.linkButtonClick = this.linkButtonClick.bind(this);\n    this.handleChangeHeader = this.handleChangeHeader.bind(this);\n    this.toggleOpen = this.toggleOpen.bind(this);\n    this.headerEnter = this.headerEnter.bind(this);\n    this.quoteButtonClick = this.quoteButtonClick.bind(this);\n    this.imageButtonClick = this.imageButtonClick.bind(this);\n    this.ulButtonClick = this.ulButtonClick.bind(this);\n    this.olButtonClick = this.olButtonClick.bind(this);\n    this.dropBtoggleOpen = this.dropBtoggleOpen.bind(this);\n    this.columnsChange = this.columnsChange.bind(this);\n    this.rowsChange = this.rowsChange.bind(this);\n    this.tableEnter = this.tableEnter.bind(this);\n    this.eventLogger = this.eventLogger.bind(this);\n  }\n\n  eventLogger(e: MouseEvent, data: Object) {\n    console.log(\"Event: \", e);\n    console.log(\"Data: \", data);\n  }\n\n  //renders raw markup as html using the marked.js library\n  getMarkdownText() {\n    var rawMarkup = marked(this.state.input, { sanitize: true, gfm: true });\n    return { __html: rawMarkup };\n  }\n\n  //finds cursor position in text field\n\n  componentDidMount() {\n    this.setState({\n      textBeforeCursorPosition: this.state.input.substring(\n        0,\n        this.state.cursorPosition\n      )\n    });\n    this.setState({\n      textAfterCursorPosition: this.state.input.substring(\n        this.state.cursorPosition,\n        this.state.input.length\n      )\n    });\n  }\n\n  findCursorPosition(e) {\n    let cursorPosition = e.target.selectionStart;\n\n    //this.setState({ cursorPosition: e.target.selectionStart });\n\n    this.setState({\n      textBeforeCursorPosition: e.target.value.substring(0, cursorPosition)\n    });\n    this.setState({\n      textAfterCursorPosition: e.target.value.substring(\n        cursorPosition,\n        e.target.value.length\n      )\n    });\n    console.log(cursorPosition);\n  }\n\n  //sets this.state.input when the input of the editor is changed\n  handleChange(event) {\n    this.setState({\n      input: event.target.value\n    });\n    this.findCursorPosition(event);\n  }\n  //updates text-area after inserting new text at cursor\n  /*handleChange(event) {\n    this.setState({ newText: event.target.value });\n    console.log(this.state.newText);\n  } */\n\n  autoBoxChange(event) {\n    event.persist();\n    this.setState({ lastEnteredText: event.target.value });\n    this.setState(state => ({\n      preInput:\n        state.textBeforeCursorPosition +\n        this.state.lastEnteredText +\n        state.textAfterCursorPosition\n    }));\n    //console.log(this.state.preInput);\n\n    //console.log(this.state.lastEnteredText);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.setState(state => ({\n      preInput:\n        state.textBeforeCursorPosition +\n        this.state.lastEnteredText +\n        state.textAfterCursorPosition\n    }));\n\n    this.setState(state => ({ input: state.preInput }));\n    this.setState(state => ({\n      textAfterCursorPosition:\n        state.lastEnteredText + state.textAfterCursorPosition\n    }));\n    this.setState(state => ({ lastEnteredText: \"\" }));\n\n    console.log(this.state.lastEnteredText);\n    console.log(this.state.preInput);\n\n    document.getElementById(\"text-box\").value = \"\";\n  }\n\n  //the below functions handle clicks of the buttons in the markown automator\n\n  boldButtonClick() {\n    this.setState(state => ({\n      lastEnteredText: \"**\" + state.lastEnteredText + \"**\"\n    }));\n  }\n\n  italicButtonClick() {\n    this.setState(state => ({\n      lastEnteredText: \"_\" + state.lastEnteredText + \"_\"\n    }));\n  }\n\n  strikeButtonClick() {\n    this.setState(state => ({\n      lastEnteredText: \"~~\" + state.lastEnteredText + \"~~\"\n    }));\n  }\n\n  linkButtonClick() {\n    this.setState(state => ({\n      lastEnteredText: \"[link name here](https://(link address here))\"\n    }));\n  }\n\n  handleChangeHeader(event) {\n    event.persist();\n    this.setState(state => ({\n      headerType: event.target.value\n    }));\n  }\n\n  toggleOpen() {\n    this.setState(state => ({\n      dropdownOpen: !state.dropdownOpen\n    }));\n  }\n\n  dropBtoggleOpen() {\n    this.setState(state => ({\n      dropBopen: !state.dropBopen\n    }));\n  }\n\n  headerEnter() {\n    if (this.state.headerType == \"H1\") {\n      this.setState(state => ({\n        lastEnteredText: \"# \" + state.lastEnteredText\n      }));\n    } else if (this.state.headerType == \"H2\") {\n      this.setState(state => ({\n        lastEnteredText: \"## \" + state.lastEnteredText\n      }));\n    } else if (this.state.headerType == \"H3\") {\n      this.setState(state => ({\n        lastEnteredText: \"### \" + state.lastEnteredText\n      }));\n    }\n  }\n\n  quoteButtonClick() {\n    this.setState(state => ({\n      lastEnteredText: \"> \" + state.lastEnteredText\n    }));\n  }\n\n  imageButtonClick() {\n    this.setState(state => ({\n      lastEnteredText: \"![file name here](https://image address)\"\n    }));\n  }\n\n  ulButtonClick() {\n    this.setState(state => ({\n      lastEnteredText: \"- \" + state.lastEnteredText\n    }));\n  }\n\n  olButtonClick() {\n    this.setState(state => ({\n      lastEnteredText: \"1. \" + state.lastEnteredText\n    }));\n  }\n\n  columnsChange(event) {\n    event.persist();\n    this.setState(state => ({\n      columns: event.target.value\n    }));\n  }\n\n  rowsChange(event) {\n    event.persist();\n    this.setState(state => ({\n      rows: event.target.value\n    }));\n  }\n\n  tableEnter() {\n    const headerUnit = \"|some text\";\n    const dividerUnit = \"|-\";\n    const cellUnit = \"|cell data\";\n\n    this.setState(state => ({\n      lastEnteredText:\n        headerUnit.repeat(this.state.columns) +\n        \"\\n\" +\n        dividerUnit.repeat(this.state.columns) +\n        \"\\n\" +\n        (cellUnit.repeat(this.state.columns) + \"\\n\").repeat(this.state.rows - 1)\n    }));\n  }\n\n  //methods for draggable\n\n  handleDrag = (e, ui) => {\n    const { x, y } = this.state.deltaPosition;\n    this.setState({\n      deltaPosition: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY\n      }\n    });\n  };\n\n  onStart = () => {\n    this.setState({ activeDrags: ++this.state.activeDrags });\n  };\n\n  onStop = () => {\n    this.setState({ activeDrags: --this.state.activeDrags });\n  };\n\n  // For controlled component\n  adjustXPos = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { x, y } = this.state.controlledPosition;\n    this.setState({ controlledPosition: { x: x - 10, y } });\n  };\n\n  adjustYPos = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { controlledPosition } = this.state;\n    const { x, y } = controlledPosition;\n    this.setState({ controlledPosition: { x, y: y - 10 } });\n  };\n\n  onControlledDrag = (e, position) => {\n    const { x, y } = position;\n    this.setState({ controlledPosition: { x, y } });\n  };\n\n  onControlledDragStop = (e, position) => {\n    this.onControlledDrag(e, position);\n    this.onStop();\n  };\n\n  render() {\n    //sets options within marked.js such as telling marked.js to highlight code blocks\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      highlight: function(code) {\n        return require(\"highlight.js\").highlightAuto(code).value;\n      },\n      pedantic: false,\n      gfm: true,\n      breaks: false,\n      sanitize: false,\n      smartLists: true,\n      smartypants: false,\n      xhtml: false\n    });\n\n    return (\n      <div id=\"app\">\n        <div id=\"nav-bar\">\n          <img\n            id=\"logo\"\n            src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/MarkupAssets/SVG+Blue+Markdown+Lucid+LogoAsset+9.svg\"\n          />\n          <img\n            id=\"lucid-title\"\n            src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/MarkupAssets/SVG+Blue+Markdown+Lucid+NameAsset+8.svg\"\n          />\n        </div>\n        <div id=\"instructions-wrapper\">\n          <div id=\"instructions-title\">Instructions</div>\n          <textarea id=\"instructions\">\n            Click inside the editor and type your markdown text or enter text in\n            the markdown automator below and style with buttons - then click\n            ENTER to insert text in the editor. (Make sure you set the cursor in\n            the editor to the position where you want to insert your text)\n          </textarea>\n        </div>\n        <img\n          id=\"scroll-down\"\n          src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/Portfolio+Assets+1/2smaller+blue+black+mouseAsset+5.svg\"\n        ></img>\n        <div id=\"edit-and-preview-wrapper\">\n          <div id=\"editor-wrapper\">\n            <div id=\"editor-title\">Editor</div>\n            <textarea\n              id=\"editor\"\n              onChange={this.handleChange}\n              value={this.state.input}\n              onClick={this.findCursorPosition}\n            ></textarea>\n          </div>\n          <div id=\"preview-wrapper\">\n            <div id=\"preview-title\">Preview</div>\n            <div\n              id=\"preview\"\n              dangerouslySetInnerHTML={this.getMarkdownText()}\n            ></div>\n          </div>\n        </div>\n        <footer>\n          <Automator\n            autoBoxChange={this.autoBoxChange}\n            onSubmit={this.onSubmit}\n            lastEnteredText={this.state.lastEnteredText}\n            boldButtonClick={this.boldButtonClick}\n            italicButtonClick={this.italicButtonClick}\n            strikeButtonClick={this.strikeButtonClick}\n            linkButtonClick={this.linkButtonClick}\n            headerValue={this.state.headerValue}\n            handleChangeHeader={this.handleChangeHeader}\n            dropdownOpen={this.state.dropdownOpen}\n            toggleOpen={this.toggleOpen}\n            headerEnter={this.headerEnter}\n            quoteButtonClick={this.quoteButtonClick}\n            imageButtonClick={this.imageButtonClick}\n            ulButtonClick={this.ulButtonClick}\n            olButtonClick={this.olButtonClick}\n            dropBopen={this.state.dropBopen}\n            dropBtoggleOpen={this.dropBtoggleOpen}\n            columnsChange={this.columnsChange}\n            rowsChange={this.rowsChange}\n            columns={this.state.columns}\n            rows={this.state.rows}\n            tableEnter={this.tableEnter}\n          />\n          <img\n            id=\"arrow\"\n            src=\"https://freecodecampassets.s3.us-east-2.amazonaws.com/MarkupAssets/Asset+11.svg\"\n          />\n          <div id=\"drag-me\">\n            Drag up the page <br />\n            for easier use\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}